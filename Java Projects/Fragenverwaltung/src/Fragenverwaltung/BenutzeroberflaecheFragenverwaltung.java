package Fragenverwaltung;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 * Klasse stellt die Benutzeroberfläche für
 * die Fragenverwaltung
 * @author hantke
 */
public class BenutzeroberflaecheFragenverwaltung extends javax.swing.JFrame
{
  /**
   * Konstruktor initialisiert alle Komponenten
   * der Benutzeroberflaeche
   * @param verwaltung Fragenverwaltung
   */
  public BenutzeroberflaecheFragenverwaltung(Fragenverwaltung verwaltung)
  {
    initComponents();
    this.setLocationRelativeTo(null); // Anwendung zentrieren
    this.verwaltung = verwaltung;
  }

  /**
   * This method is called from within the constructor to
   * initialize the form. WARNING: Do NOT modify this code.
   * The content of this method is always regenerated by the
   * Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    tfFragenummer = new javax.swing.JTextField();
    tfFrage = new javax.swing.JTextField();
    tfAntwort1 = new javax.swing.JTextField();
    tfAntwort2 = new javax.swing.JTextField();
    btnNeu = new javax.swing.JButton();
    btnÄndern = new javax.swing.JButton();
    btnLoeschen = new javax.swing.JButton();
    btnBeenden = new javax.swing.JButton();
    btnFirst = new javax.swing.JButton();
    btnBack = new javax.swing.JButton();
    btnNext = new javax.swing.JButton();
    btnLast = new javax.swing.JButton();
    lblStatus = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    tabelle = new javax.swing.JTable();
    tfAntwort3 = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    tfAntwortnummer = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    setTitle("Fragenverwaltung");
    addWindowListener(new java.awt.event.WindowAdapter()
    {
      public void windowClosing(java.awt.event.WindowEvent evt)
      {
        formWindowClosing(evt);
      }
    });

    jLabel1.setText("Fragenummer:");

    jLabel2.setText("Frage:");

    jLabel3.setText("Antwort 1:");

    jLabel4.setText("Antwort 2:");

    tfFragenummer.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        tfFragenummerActionPerformed(evt);
      }
    });

    tfFrage.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        tfFrageActionPerformed(evt);
      }
    });

    btnNeu.setText("Neu");
    btnNeu.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btnNeuActionPerformed(evt);
      }
    });

    btnÄndern.setText("Ändern");
    btnÄndern.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btnÄndernActionPerformed(evt);
      }
    });

    btnLoeschen.setText("Löschen");
    btnLoeschen.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btnLoeschenActionPerformed(evt);
      }
    });

    btnBeenden.setText("Beenden");
    btnBeenden.addInputMethodListener(new java.awt.event.InputMethodListener()
    {
      public void caretPositionChanged(java.awt.event.InputMethodEvent evt)
      {
      }
      public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt)
      {
        btnBeendenInputMethodTextChanged(evt);
      }
    });
    btnBeenden.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btnBeendenActionPerformed(evt);
      }
    });

    btnFirst.setText("<<");
    btnFirst.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btnFirstActionPerformed(evt);
      }
    });

    btnBack.setText("<");
    btnBack.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btnBackActionPerformed(evt);
      }
    });

    btnNext.setText(">");
    btnNext.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btnNextActionPerformed(evt);
      }
    });

    btnLast.setText(">>");
    btnLast.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btnLastActionPerformed(evt);
      }
    });

    lblStatus.setBackground(new java.awt.Color(255, 255, 255));
    lblStatus.setText("Statuszeile");

    tabelle.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][]
      {
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null},
        {null, null, null, null}
      },
      new String []
      {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    jScrollPane1.setViewportView(tabelle);

    tfAntwort3.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        tfAntwort3ActionPerformed(evt);
      }
    });

    jLabel5.setText("Antwort 3:");

    tfAntwortnummer.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        tfAntwortnummerActionPerformed(evt);
      }
    });

    jLabel6.setText("Antwortnummer:");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jScrollPane1)
            .addContainerGap())
          .addGroup(layout.createSequentialGroup()
            .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 853, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(122, Short.MAX_VALUE))
          .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(jLabel2)
              .addComponent(jLabel1)
              .addComponent(jLabel3)
              .addComponent(jLabel4)
              .addComponent(jLabel5)
              .addComponent(jLabel6))
            .addGap(10, 10, 10)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(tfAntwort2, javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(tfAntwort3)
              .addComponent(tfAntwortnummer, javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(tfAntwort1, javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(tfFrage, javax.swing.GroupLayout.Alignment.TRAILING)
              .addComponent(tfFragenummer, javax.swing.GroupLayout.Alignment.TRAILING))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(btnNeu, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(btnBeenden, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(btnLoeschen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                  .addComponent(btnÄndern, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGap(42, 42, 42))))
      .addGroup(layout.createSequentialGroup()
        .addGap(378, 378, 378)
        .addComponent(btnFirst)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(btnBack)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(btnNext)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(btnLast)
        .addGap(0, 0, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(16, 16, 16)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(tfFragenummer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel2)
              .addComponent(tfFrage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(tfAntwort1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel3))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel4)
              .addComponent(tfAntwort2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(13, 13, 13)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(jLabel5)
              .addComponent(tfAntwort3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
          .addGroup(layout.createSequentialGroup()
            .addComponent(btnNeu)
            .addGap(18, 18, 18)
            .addComponent(btnÄndern)
            .addGap(16, 16, 16)
            .addComponent(btnLoeschen)
            .addGap(18, 18, 18)
            .addComponent(btnBeenden)))
        .addGap(18, 18, 18)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel6)
          .addComponent(tfAntwortnummer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(btnFirst)
          .addComponent(btnBack)
          .addComponent(btnNext)
          .addComponent(btnLast))
        .addGap(20, 20, 20)
        .addComponent(lblStatus)
        .addGap(18, 18, 18)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void btnNeuActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnNeuActionPerformed
  {//GEN-HEADEREND:event_btnNeuActionPerformed
    if (this.aktuellerZustand == Zustand.BASIS ||
        this.aktuellerZustand == Zustand.LEER )
          this.einstellenZustand(Zustand.NEU);
    else if ( this.aktuellerZustand == Zustand.NEU )
    {
      try
      { // Übernahme der Frage
        Frage frage = eingabePruefung();
        this.lblStatus.setText("Eingabe OK");
        verwaltung.speichernInListe(frage, aktuellerZustand);
        
      }catch (Exception e)
      {
        this.lblStatus.setText(e.getMessage());
      }
    }
  }//GEN-LAST:event_btnNeuActionPerformed

  private void btnFirstActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnFirstActionPerformed
  {//GEN-HEADEREND:event_btnFirstActionPerformed
    verwaltung.navigation((Zustand.FIRST));
  }//GEN-LAST:event_btnFirstActionPerformed

  private void btnBackActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnBackActionPerformed
  {//GEN-HEADEREND:event_btnBackActionPerformed
    verwaltung.navigation((Zustand.BACK));
  }//GEN-LAST:event_btnBackActionPerformed

  private void btnNextActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnNextActionPerformed
  {//GEN-HEADEREND:event_btnNextActionPerformed
    verwaltung.navigation((Zustand.NEXT));
  }//GEN-LAST:event_btnNextActionPerformed

  private void btnLastActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnLastActionPerformed
  {//GEN-HEADEREND:event_btnLastActionPerformed
    verwaltung.navigation((Zustand.LAST));
  }//GEN-LAST:event_btnLastActionPerformed

  private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
  {//GEN-HEADEREND:event_formWindowClosing
    verwaltung.beenden();
  }//GEN-LAST:event_formWindowClosing

  private void btnBeendenInputMethodTextChanged(java.awt.event.InputMethodEvent evt)//GEN-FIRST:event_btnBeendenInputMethodTextChanged
  {//GEN-HEADEREND:event_btnBeendenInputMethodTextChanged
    // TODO add your handling code here:
  }//GEN-LAST:event_btnBeendenInputMethodTextChanged

  private void btnBeendenActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnBeendenActionPerformed
  {//GEN-HEADEREND:event_btnBeendenActionPerformed
    if ( this.aktuellerZustand == Zustand.BASIS ||
            this.aktuellerZustand == Zustand.LEER )
        verwaltung.beenden(); // Anwendung beenden
    else if ( this.aktuellerZustand == Zustand.NEU ||
            this.aktuellerZustand == Zustand.Aendern )
    { // Eingabe verwerfen und letzten aktuellen Datensatz anzeigen
      verwaltung.abbrechen();
    }
  }//GEN-LAST:event_btnBeendenActionPerformed

  private void btnÄndernActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnÄndernActionPerformed
  {//GEN-HEADEREND:event_btnÄndernActionPerformed
    if ( aktuellerZustand == Zustand.BASIS )
    {
      this.einstellenZustand(Zustand.Aendern);
    }
    else if ( aktuellerZustand == Zustand.Aendern )
    {
      try
      {
        Frage frage = eingabePruefung();
        verwaltung.speichernInListe(frage, 
                                    aktuellerZustand);
      }catch (Exception e)
      {
        this.lblStatus.setText(e.getMessage());
      }
    }
  }//GEN-LAST:event_btnÄndernActionPerformed

  private void btnLoeschenActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnLoeschenActionPerformed
  {//GEN-HEADEREND:event_btnLoeschenActionPerformed
    this.verwaltung.loeschen();
  }//GEN-LAST:event_btnLoeschenActionPerformed

  private void tfAntwortnummerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tfAntwortnummerActionPerformed
  {//GEN-HEADEREND:event_tfAntwortnummerActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_tfAntwortnummerActionPerformed

  private void tfAntwort3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tfAntwort3ActionPerformed
  {//GEN-HEADEREND:event_tfAntwort3ActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_tfAntwort3ActionPerformed

  private void tfFragenummerActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tfFragenummerActionPerformed
  {//GEN-HEADEREND:event_tfFragenummerActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_tfFragenummerActionPerformed

  private void tfFrageActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_tfFrageActionPerformed
  {//GEN-HEADEREND:event_tfFrageActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_tfFrageActionPerformed
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnBack;
  private javax.swing.JButton btnBeenden;
  private javax.swing.JButton btnFirst;
  private javax.swing.JButton btnLast;
  private javax.swing.JButton btnLoeschen;
  private javax.swing.JButton btnNeu;
  private javax.swing.JButton btnNext;
  private javax.swing.JButton btnÄndern;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel lblStatus;
  private javax.swing.JTable tabelle;
  private javax.swing.JTextField tfAntwort1;
  private javax.swing.JTextField tfAntwort2;
  private javax.swing.JTextField tfAntwort3;
  private javax.swing.JTextField tfAntwortnummer;
  private javax.swing.JTextField tfFrage;
  private javax.swing.JTextField tfFragenummer;
  // End of variables declaration//GEN-END:variables
  // Referenz auf die Fragenverwaltung
  private Fragenverwaltung verwaltung;
  // Variable zum Merken des Zustandes der Benutzeroberfläche
  private int aktuellerZustand = Zustand.BASIS;
  
  /**
   * Methode stellt ein Datei-Dialog zur Auswahl einer
   * Datei bereit. Der Dialog kann zur Dateiauswahl für das 
   * Öffnen und speichern von Dateien genutzt werden.
   * Die ausgewählte csv-Datei wird als File-Objekt geliefert.
   * 
   * @param text Bezeichnung des Dialogs verwendet.
   * @return file 
   */
  public File getFile(String text)
  {
    JFileChooser fc = new JFileChooser(text);
    fc.setCurrentDirectory(
            new File("F:\\Comhard\\Fachinformatik\\Java\\Projekt_Lernquiz\\Lernquiz"));
    FileNameExtensionFilter filter = 
            new FileNameExtensionFilter("csv-Datei", "csv");
    fc.setFileFilter(filter);
    fc.setAcceptAllFileFilterUsed(false);
    int antw = fc.showDialog(this, text);
    // falls Abbrechen
    if (antw == JFileChooser.CANCEL_OPTION)
      return null;
    // Prüfen der Dateierweiterung
    File file = fc.getSelectedFile();
    String path = file.getPath();
    String letztenZeichen = path.substring(path.length()-4);
    // falls Dateierweiterung nicht csv, diese anhängen
    if ( !letztenZeichen.equals(".csv") )
      file = new File(path + ".csv");
    return file;
  }
  
  /**
   * Methode zeigt Liste in der Tabelle an.
   * @param liste Referenz aus anzuzeigenden Lise
   */
  public void anzeigenTabelle(Fragenliste liste)
  {
    // Array für Spaltenüberschriften
    String[] spaltenNamen = {"Fragenummer", "Frage", 
                            "Auswahl 1", "Auswahl 2",
                            "Auswahl 3", "Antwortnummer"};
    Object[][] ds = null; // Variable für Datensätze
    if ( liste != null)
    {
      // Datensätze in 2-dim-Arrays schreiben
      int zeilenAnzahl = liste.size();
      ds = new Object[zeilenAnzahl][6];
      for ( int index = 0; index < zeilenAnzahl; index++ )
      {
        Frage frage = liste.getFrage(index);
        ds[index][0] = frage.getFrageNummer();
        ds[index][1] = frage.getFrage();
        ds[index][2] = frage.getAuswahl1();
        ds[index][3] = frage.getAuswahl2();
        ds[index][4] = frage.getAuswahl3();
        ds[index][5] = frage.getAntwortNummer();
      }
    }
    // Tabellenkomponente mit Tabellen-Modell verbinden
    this.tabelle.setModel(
            new DefaultTableModel(ds, spaltenNamen));
    // Tabellenanzeige aktualisieren
    this.tabelle.updateUI();
  }
  
  /** 
   * Methode zum Anzeigen des Status
   * @param text der Statustext
   */
  public void anzeigenStatus(String text)
  {
    this.lblStatus.setText(text);
  }
  
  /**
   * Methode zeigt die Frage in den Textfeldern der
   * Benutzeroberfläche an.
   * @param frage die Frage
   */
  public void anzeigenFrage(Frage frage)
  {
    this.tfFragenummer.setText(
            Integer.toString(frage.getFrageNummer()));
    this.tfFrage.setText(frage.getFrage());
    this.tfAntwort1.setText(frage.getAuswahl1());
    this.tfAntwort2.setText(frage.getAuswahl2());
    this.tfAntwort3.setText(frage.getAuswahl3());
    this.tfAntwortnummer.setText(
            Integer.toString(frage.getAntwortNummer()));
  }
  
  /**
   * Methode erstellt den Gewünschten Zustand der 
   * Benutzeroberfläche ein und ändert je nach Bedarf 
   * das Aussehen und die Funktionalität der Komponenten.
   * @param zustand Zustand der Benutzeroberfläche
   */
  public void einstellenZustand(int zustand)
  {
    this.aktuellerZustand = zustand;
    switch (zustand)
    {
      case Zustand.BASIS:    
        this.btnNeu.setText("Neu"); 
        this.btnÄndern.setText("Ändern"); 
        this.btnÄndern.setEnabled(true);
        this.btnLoeschen.setText("Löschen"); 
        this.btnLoeschen.setEnabled(true);
        this.btnBeenden.setText("Beenden");
        this.btnBeenden.setEnabled(true);
        this.setNavigationEnabled(true);
        this.setTextfelderEditable(false);
        this.tabelle.setVisible(true); // Bewirkt nichts
        break;
        
      case Zustand.NEU:
        this.btnNeu.setText("DS Speichern"); 
        this.btnNeu.setEnabled(true); 
        this.btnÄndern.setEnabled(false);
        this.btnLoeschen.setEnabled(false);
        this.btnBeenden.setText("Abbrechen");
        this.btnBeenden.setEnabled(true);
        this.setNavigationEnabled(false);
        this.setTextfelderEditable(true);
        this.leerenTextFelder();
        break;
        
      case Zustand.Aendern:
        this.btnNeu.setEnabled(false); 
        this.btnÄndern.setText("Speichern"); 
        this.btnÄndern.setEnabled(true);
        this.setNavigationEnabled(false);
        this.setTextfelderEditable(true);
        break;
        
      case Zustand.LEER:
        this.btnNeu.setText("Neu"); 
        this.btnNeu.setEnabled(true); 
        this.btnÄndern.setEnabled(false);
        this.btnLoeschen.setEnabled(false);
        this.btnBeenden.setText("Beenden");
        this.btnBeenden.setEnabled(true);
        this.setNavigationEnabled(false);
        this.setTextfelderEditable(false);
        this.tabelle.setVisible(false); // Bewirkt nichts
        this.leerenTextFelder();
        
    } // Ende Switch
  } // Ende der Methode einstellenZustand
  
  /**
   * Methode setzt die Navigationsbuttons auf aktiv
   * @param bin der Zustand
   */
  private void setNavigationEnabled(boolean bin)
  {
    this.btnFirst.setEnabled(bin);
    this.btnBack.setEnabled(bin);
    this.btnNext.setEnabled(bin);
    this.btnLast.setEnabled(bin);
  }
  
  /**
   * Methode setzt die Textfelder auf bearbeitbar
   * @param bin der Zustand
   */
  private void setTextfelderEditable(boolean bin)
  {
    this.tfFragenummer.setEnabled(bin);
    this.tfFrage.setEnabled(bin);
    this.tfAntwort1.setEnabled(bin);
    this.tfAntwort2.setEnabled(bin);
    this.tfAntwort3.setEnabled(bin);
    this.tfAntwortnummer.setEnabled(bin);
  }
  
  /**
   * Methode leert ie Textfelder
   */
  private void leerenTextFelder()
  {
    this.tfAntwort2.setText(null);
    this.tfFrage.setText(null);
    this.tfFragenummer.setText(null);
    this.tfAntwort1.setText(null);
    this.tfAntwort3.setText(null);
    this.tfAntwortnummer.setText(null);
    this.tfFragenummer.requestFocus(); // Cursor setzen
  }
  
  /**
   * Methode prüft, ob eine Eingabe erfolgt ist
   * @return frage die Frage
   * @throws Exception wenn keine Eingabe erfolgt
   */
  private Frage eingabePruefung() throws Exception
  {
    // Objekt zur Rückgabe einer Frage
    Frage frage = new Frage();
    // Prüfen und Übernehmen der Fragenummer
    String frageNummer = this.tfFragenummer.getText().trim();
    if ( frageNummer.isEmpty() )
      throw new Exception(
          "Bitte Fragenummer eingeben!");
    frage.setFrageNummer(Integer.parseInt(frageNummer));
    // Prüfen und Übernehmen der Frage
    String stringFrage = this.tfFrage.getText().trim();
    if ( stringFrage.isEmpty() )
      throw new Exception(
          "Bitte Frage eingeben!");
    frage.setFrage(stringFrage);
    // Prüfen und Übernehmen der Auswahl1
    String auswahl1 = this.tfAntwort1.getText().trim();
    if ( auswahl1.isEmpty() )
      throw new Exception(
          "Bitte Auswahl1 eingeben!");
    frage.setAuswahl1(auswahl1); 
    // Prüfen und Übernehmen der Auswahl2
    String auswahl2 = this.tfAntwort2.getText().trim();
    if ( auswahl2.isEmpty() )
      throw new Exception(
          "Bitte Auswahl2 eingeben!");
    frage.setAuswahl2(auswahl2); 
    // Prüfen und Übernehmen der Auswahl3
    String auswahl3 = this.tfAntwort3.getText().trim();
    if ( auswahl3.isEmpty() )
      throw new Exception(
          "Bitte Auswahl3 eingeben!");
    frage.setAuswahl3(auswahl3); 
    // Prüfen und Übernehmen der Antwortnummer
    String antwortNummer = this.tfAntwortnummer.getText().trim();
    if ( antwortNummer.isEmpty() )
      throw new Exception(
          "Bitte Antwortnummer eingeben!");
    frage.setAntwortNummer(Integer.parseInt(antwortNummer));
    return frage;
  }
} // Ende der Klasse BenutzeroberflaecheFragenverwaltung
