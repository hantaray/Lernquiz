package lernquiz;

import java.io.File;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Klasse stellt die Benutzeroberfläche für
 * das Quiz
 * @author ahantke
 */
public class BenutzeroberflaecheQuiz extends javax.swing.JFrame
{
    public int richtigeAntwort;
  /**
   * Konstruktor initialisiert alle Komponenten der
   * Benutzeroberfläche.
   *
   * @param quiz Quiz
   */
  public BenutzeroberflaecheQuiz(Quiz quiz)
  {
    initComponents();
    this.quiz = quiz;
    this.setLocationRelativeTo(null); // Fenster zentrieren
  }

  /**
   * This method is called from within the constructor to initialize
   * the form. WARNING: Do NOT modify this code. The content of this
   * method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    lblFrage = new javax.swing.JLabel();
    rbtnAuswahl1 = new javax.swing.JRadioButton();
    rbtnAuswahl2 = new javax.swing.JRadioButton();
    rbtnAuswahl3 = new javax.swing.JRadioButton();
    btnBeenden = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Quiz");

    rbtnAuswahl1.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        rbtnAuswahl1ActionPerformed(evt);
      }
    });

    rbtnAuswahl2.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        rbtnAuswahl2ActionPerformed(evt);
      }
    });

    rbtnAuswahl3.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        rbtnAuswahl3ActionPerformed(evt);
      }
    });

    btnBeenden.setText("Beenden");
    btnBeenden.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        btnBeendenActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(rbtnAuswahl2)
          .addComponent(rbtnAuswahl1)
          .addComponent(rbtnAuswahl3))
        .addGap(0, 0, Short.MAX_VALUE))
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(btnBeenden)
        .addGap(71, 71, 71))
      .addGroup(layout.createSequentialGroup()
        .addGap(29, 29, 29)
        .addComponent(lblFrage, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
        .addContainerGap(680, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(lblFrage, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(18, 18, 18)
        .addComponent(rbtnAuswahl1)
        .addGap(18, 18, 18)
        .addComponent(rbtnAuswahl2)
        .addGap(18, 18, 18)
        .addComponent(rbtnAuswahl3)
        .addGap(18, 18, 18)
        .addComponent(btnBeenden)
        .addContainerGap(59, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void rbtnAuswahl2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rbtnAuswahl2ActionPerformed
  {//GEN-HEADEREND:event_rbtnAuswahl2ActionPerformed
    if (richtigeAntwort == 2)
      {
          quiz.ergebnis++;
      }
    
    if (quiz.zaehler != quiz.anzahlFragen)
    {
      quiz.auswahl();
      quiz.zaehler++;
      
//      antwortnummer2Richtig();
      
    }
    else
      quiz.quizWiederholen();
  }//GEN-LAST:event_rbtnAuswahl2ActionPerformed

  private void rbtnAuswahl1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rbtnAuswahl1ActionPerformed
  {//GEN-HEADEREND:event_rbtnAuswahl1ActionPerformed
    if (richtigeAntwort == 1)
      {
          quiz.ergebnis++;
      }
      
      if (quiz.zaehler != quiz.anzahlFragen)
    {
      quiz.auswahl();
      quiz.zaehler++;
      
//      antwortnummer1Richtig();
      
  
    }
    else
      quiz.quizWiederholen();
  }//GEN-LAST:event_rbtnAuswahl1ActionPerformed

  private void rbtnAuswahl3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rbtnAuswahl3ActionPerformed
  {//GEN-HEADEREND:event_rbtnAuswahl3ActionPerformed
    if (richtigeAntwort == 3)
      {
          quiz.ergebnis++;
      }
      
      if (quiz.zaehler != quiz.anzahlFragen)
    {
      quiz.auswahl();
      quiz.zaehler++;
      
//      antwortnummer3Richtig();
     
        
    }
    else
      quiz.quizWiederholen();
  }//GEN-LAST:event_rbtnAuswahl3ActionPerformed

  private void btnBeendenActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnBeendenActionPerformed
  {//GEN-HEADEREND:event_btnBeendenActionPerformed
    quiz.beenden();
  }//GEN-LAST:event_btnBeendenActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnBeenden;
  private javax.swing.JLabel lblFrage;
  private javax.swing.JRadioButton rbtnAuswahl1;
  private javax.swing.JRadioButton rbtnAuswahl2;
  private javax.swing.JRadioButton rbtnAuswahl3;
  // End of variables declaration//GEN-END:variables
 
  // Referenz auf die Personenverwaltung
  private Quiz quiz;
  
  /**
   * Methode erstellt eine Anzeige der aktuellen Frage
   * und zeigt die Auswahlmöglichkeiten in einer 
   * ButtonGroup an
   * @param frage die aktuelle Frage
   */
  public void anzeigeFrage(Frage frage)
  {
    this.lblFrage.setText(frage.getFrage());
    this.rbtnAuswahl1.setText(frage.getAuswahl1());
    this.rbtnAuswahl2.setText(frage.getAuswahl2());
    this.rbtnAuswahl3.setText(frage.getAuswahl3());
    richtigeAntwort = frage.getAntwortNummer();
      System.out.println(richtigeAntwort);
      
    
    ButtonGroup bg1 = new ButtonGroup( );
    bg1.add(rbtnAuswahl1);
    bg1.add(rbtnAuswahl2);
    bg1.add(rbtnAuswahl3);
    bg1.clearSelection();
  }
  
  /**
   * Methode prüft, ob 1 die richtige Antwortnummer ist
   * @return true wenn antwortnummer1 = 1
   */
  
  public void antwortnummer1Richtig()
  {
    Frage frage = new Frage();
    if (frage.getAntwortNummer() == 1)
    {
      quiz.ergebnis++;
    }
  }
  
  /**
   * Methode prüft, ob 2 die richtige Antwortnummer ist
   * @return true wenn antwortnummer2 = 2
   */
  public void antwortnummer2Richtig()
  {
    Frage frage = new Frage();
    if (frage.getAntwortNummer() == 2)
    {
      quiz.ergebnis++;
    }
  }
  
  /**
   * Methode prüft, ob 3 die richtige Antwortnummer ist
   * @return true wenn antwortnummer3 = 3
   */
  public void antwortnummer3Richtig()
  {
    Frage frage = new Frage();
    if (frage.getAntwortNummer() == 3)
    {
      quiz.ergebnis++;
    }
  }
  
  /**
   * Methode stellt ein Datei-Dialog zur Auswahl einer
   * Datei bereit. Der Dialog kann zur Dateiauswahl für das 
   * Öffnen und speichern von Dateien genutzt werden.
   * Die ausgewählte csv-Datei wird als File-Objekt geliefert.
   * 
   * @param text Bezeichnung des Dialogs verwendet.
   * @return file die ausgewählte Datei
   */
  public File getFile(String text)
  {
    JFileChooser fc = new JFileChooser(text);
    fc.setCurrentDirectory(
            new File
        ("F:\\Comhard\\Fachinformatik\\Java\\Projekt_Lernquiz\\Lernquiz"));
    FileNameExtensionFilter filter = 
            new FileNameExtensionFilter("csv-Datei", "csv");
    fc.setFileFilter(filter);
    fc.setAcceptAllFileFilterUsed(false);
    int antw = fc.showDialog(this, text);
    // falls Abbrechen
    if (antw == JFileChooser.CANCEL_OPTION)
      return null;
    // Prüfen der Dateierweiterung
    File file = fc.getSelectedFile();
    String path = file.getPath();
    String letztenZeichen = path.substring(path.length()-4);
    // falls Dateierweiterung nicht csv, diese anhängen
    if ( !letztenZeichen.equals(".csv") )
      file = new File(path + ".csv");
    return file;
  }
} // Ende der Klasse BenutzeroberflauecheQuiz
